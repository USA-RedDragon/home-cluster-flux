{
    "$schema": "https://docs.renovatebot.com/renovate-schema.json",
    "extends": [
        "local>USA-RedDragon/renovate-configs"
    ],
    "gitIgnoredAuthors": [
        "198527162+github-actions[bot]@users.noreply.github.com"
    ],
    "rebaseWhen": "auto",
    "flux": {
        "enabled": true,
        "fileMatch": [
            "\\.ya?ml$"
        ]
    },
    "helm-values": {
        "enabled": true,
        "fileMatch": [
            "\\.ya?ml$"
        ]
    },
    "customManagers": [
        {
            "customType": "regex",
            "fileMatch": [
                "(^|/)kube-system\\/etcd-backup\\.yaml"
            ],
            "matchStrings": [
                "github\\.com\\/siderolabs\\/talos\\/releases\\/download\\/(?<currentValue>v.*)\\/talosctl-linux-amd64"
            ],
            "depNameTemplate": "siderolabs/talos",
            "datasourceTemplate": "github-releases",
            "versioningTemplate": "semver"
        },
        {
            "customType": "regex",
            "fileMatch": [
                "\\.ya?ml$"
            ],
            "matchStrings": [
                "^\\s+imageName:\\s+ghcr\\.io\\/cloudnative-pg\\/postgresql:(?<currentValue>.*)$"
            ],
            "depNameTemplate": "ghcr.io/cloudnative-pg/postgresql",
            "datasourceTemplate": "docker",
            "versioningTemplate": "regex:^(?<major>\\d+).(?<minor>\\d+)-(?<patch>\\d+)$"
        },
        {
            "customType": "regex",
            "fileMatch": [
                "(^|/)infrastructure\\/longhorn\\/app\\/values\\.yaml"
            ],
            "matchStrings": [
                "repository:\\s+(?<depName>.*)\\n\\s*tag:\\s+(?<currentValue>.*)"
            ],
            "datasourceTemplate": "docker",
            "versioningTemplate": "semver-coerced"
        },
        {
            "customType": "regex",
            "fileMatch": [
                "(^|/)apps\\/renovate-ce\\/values\\.yaml"
            ],
            "matchStrings": [
                "repository:\\s+(?<depName>.*)\\n\\s*version:\\s+(?<currentValue>.*)"
            ],
            "datasourceTemplate": "docker",
            "versioningTemplate": "semver-coerced"
        }
    ],
    "packageRules": [
        {
            "matchUpdateTypes": [
                "digest",
                "pinDigest"
            ],
            "automerge": false
        },
        {
            "automerge": false,
            "matchPackageNames": [
                "/^ghcr.io\\/usa-reddragon\\/papermc$/"
            ]
        },
        {
            "automerge": false,
            "allowedVersions": "<=1.19.2",
            "matchPackageNames": [
                "/^ghcr.io\\/usa-reddragon\\/fabric$/"
            ]
        },
        {
            "matchUpdateTypes": [
                "digest",
                "pinDigest"
            ],
            "automerge": true,
            "matchPackageNames": [
                "/^ghcr.io\\/usa-reddragon\\/aredn-base$/"
            ]
        },
        {
            "matchUpdateTypes": [
                "digest",
                "pinDigest"
            ],
            "automerge": true,
            "matchPackageNames": [
                "/^ghcr.io\\/usa-reddragon\\/mc-mcswain-dev$/"
            ]
        },
        {
            "matchUpdateTypes": [
                "digest",
                "pinDigest"
            ],
            "automerge": true,
            "matchPackageNames": [
                "/^ghcr.io\\/usa-reddragon\\/meshmap$/"
            ]
        },
        {
            "matchUpdateTypes": [
                "digest",
                "pinDigest"
            ],
            "automerge": true,
            "matchPackageNames": [
                "/^ghcr.io\\/usa-reddragon\\/trunk-recorder-soapysdrplay3-prometheus$/"
            ]
        },
        {
            "matchUpdateTypes": [
                "digest",
                "pinDigest"
            ],
            "automerge": true,
            "matchPackageNames": [
                "/^ghcr.io\\/hertzg\\/rtl_433_docker$/"
            ]
        },
        {
            "matchUpdateTypes": [
                "digest",
                "pinDigest"
            ],
            "automerge": true,
            "matchPackageNames": [
                "/^ghcr.io\\/usa-reddragon\\/mqtt-wx$/"
            ]
        },
        {
            "matchUpdateTypes": [
                "major"
            ],
            "automerge": true,
            "matchPackageNames": [
                "/kube-prometheus-stack/"
            ]
        },
        {
            "matchUpdateTypes": [
                "minor"
            ],
            "automerge": false,
            "matchPackageNames": [
                "/^lscr.io\\/linuxserver\\/ffmpeg$/"
            ]
        },
        {
            "matchUpdateTypes": [
                "minor"
            ],
            "automerge": false,
            "matchPackageNames": [
                "/^ghcr.io\\/goauthentik\\/server$/"
            ]
        },
        {
            "matchDatasources": [
                "docker"
            ],
            "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z$",
            "matchPackageNames": [
                "/minio/"
            ]
        },
        {
            "matchDatasources": [
                "docker"
            ],
            "versioning": "regex:^version-(?<major>\\d+).(?<minor>\\d+)-cli$",
            "matchPackageNames": [
                "/^lscr.io\\/linuxserver\\/ffmpeg$/"
            ]
        },
        {
            "schedule": [
                "after 4:00am, before 7:00am"
            ],
            "matchPackageNames": [
                "/^ghcr.io\\/usa-reddragon\\/palworld-server-docker$/",
                "/^palworld$/"
            ]
        },
        {
            "automerge": false,
            "allowedVersions": "<=500",
            "matchPackageNames": [
                "/^longhornio\\/longhorn-engine$/"
            ]
        },
        {
            "groupName": "Longhorn",
            "matchDatasources": [
                "docker",
                "helm"
            ],
            "matchPackageNames": [
                "longhorn",
                "longhornio/longhorn-engine",
                "longhornio/longhorn-manager",
                "longhornio/longhorn-ui",
                "longhornio/longhorn-instance-manager",
                "longhornio/longhorn-share-manager",
                "longhornio/backing-image-manager",
                "longhornio/support-bundle-kit",
                "longhornio/csi-attacher",
                "longhornio/csi-provisioner",
                "longhornio/csi-node-driver-registrar",
                "longhornio/csi-resizer",
                "longhornio/csi-snapshotter",
                "longhornio/livenessprobe",
                "longhornio/openshift-origin-oauth-proxy"
            ]
        },
        {
            "groupName": "Renovate",
            "matchDatasources": [
                "docker",
                "helm"
            ],
            "matchPackageNames": [
                "mend-renovate-enterprise-edition",
                "ghcr.io/usa-reddragon/renovate-ee-worker",
                "ghcr.io/usa-reddragon/renovate-ee"
            ]
        }
    ]
}
