# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/keycloak/keycloak
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "22.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

args: ["start-dev"]

secrets: []
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs: []
# - name: app-config
#   data:
#     TEST_ENV: alive
# - name: app-otherenv
#   data:
#     SPECIAL_KEY: here
# - name: app-configfile
#   data:
#     test.ini: |
#       [test]
#       value=1

envFrom: []
# - secretRef:
#     name: app-creds
# - configMapRef:
#     name: app-config

env:
- name: KC_DB_URL
  value: "jdbc:postgresql://postgres-app.postgres.svc.cluster.local/keycloak"
- name: KC_DB_USERNAME
  value: "keycloak"
- name: KC_HEALTH_ENABLED
  value: "true"
- name: KC_DB
  value: "postgres"
- name: KC_PROXY
  value: "passthrough"
- name: KC_HOSTNAME_DEBUG
  value: "true"
- name: KC_HOSTNAME_URL
  value: "https://keycloak.mcswain.dev/"
- name: KC_HOSTNAME_ADMIN_URL
  value: "https://keycloak.mcswain.dev/"
- name: KC_DB_PASSWORD
  valueFrom:
    secretKeyRef:
      name: keycloak
      key: db-password
# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
  - name: keycloak
    port: 8080

persistentVolumes:
# - name: data
#   mountPath: /var/lib/postgresql/data
#   subPath: pg
#   size: 10Gi
#   persistentVolumeClaim:
#     name: data
#     storageClass: mayastor-nvme
# - name: config
#   mountPath: /config
#   configMap:
#     name: app-configfile
#     items:
#     - key: test.ini
#       path: config.ini
# - name: keys
#   mountPath: /keys
#   readOnly: true
#   secret:
#     secretName: app-keyfile

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: cloudflare
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
    #   grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
  hosts:
  - host: keycloak.mcswain.dev
    paths:
    - port: 8080
      path: /
      pathType: Prefix
  tls:
  - secretName: keycloak-mcswain-dev-tls
    hosts:
      - keycloak.mcswain.dev

probes:
  liveness:
    httpGet:
      path: /health/ready
      port: 8080
  readiness:
    httpGet:
      path: /health/ready
      port: 8080

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
