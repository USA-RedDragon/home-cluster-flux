# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: vabene1111/recipes
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.5.6@sha256:709000675c7df50ad764266b1891bf0907d4229db4c550adcf5288f7d13a764b"

command:
- /opt/recipes/venv/bin/gunicorn
- -b
- :8080
- --access-logfile
- "-"
- --error-logfile
- "-"
- --log-level
- INFO
- recipes.wsgi

args: []

imagePullSecrets:
- name: registry-docker-hub
nameOverride: ""
fullnameOverride: ""

secrets: []
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs:
- name: recipes-nginx-config
  data:
    nginx-config: |-
      events {
        worker_connections 1024;
      }
      http {
        include mime.types;
        server {
          listen 80;
          server_name _;
          access_log /dev/stdout;
          error_log /dev/stderr;

          client_max_body_size 16M;

          # serve static files
          location /static/ {
            alias /static/;
          }
          # serve media files
          location /media/ {
            alias /media/;
          }
        }
      }
- name: app-config
  data:
    DB_ENGINE: django.db.backends.postgresql
    POSTGRES_HOST: postgres-app.postgres.svc.cluster.local
    POSTGRES_PORT: "5432"
    POSTGRES_DB: tandoor
    POSTGRES_USER: tandoor
    TIMEZONE: "America/Chicago"
    GUNICORN_MEDIA: "0"
    GUNICORN_WORKERS: "2"
    GUNICORN_THREADS: "2"
    EMAIL_HOST: email.mcswain.dev
    EMAIL_PORT: "465"
    EMAIL_HOST_USER: tandoor
    EMAIL_USE_TLS: "0"
    EMAIL_USE_SSL: "1"
    DEFAULT_FROM_EMAIL: recipes@mcswain.dev
    ACCOUNT_EMAIL_SUBJECT_PREFIX: '[Recipes] '
    ENABLE_PDF_EXPORT: "1"
# - name: app-otherenv
#   data:
#     SPECIAL_KEY: here
# - name: app-configfile
#   data:
#     test.ini: |
#       [test]
#       value=1

envFrom:
- secretRef:
    name: app-secrets
- configMapRef:
    name: app-config

env: []
# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podAnnotations:
  backup.velero.io/backup-volumes-excludes: nginx-config

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
  - name: http
    port: 8080

extraContainers:
- name: nginx
  image: nginx:mainline-alpine@sha256:7ba6006df2033690d8c64bd8df69e4a1957b78e57b4e32141c78d72a5e0de63d
  imagePullPolicy: IfNotPresent
  ports:
    - containerPort: 80
      protocol: TCP
      name: http
    - containerPort: 8080
      protocol: TCP
      name: gunicorn
  volumeMounts:
    - mountPath: /media
      name: mediafiles
    - mountPath: /static
      name: staticfiles
    - name: nginx-config
      mountPath: /etc/nginx/nginx.conf
      subPath: nginx-config
      readOnly: true

persistentVolumes:
- name: staticfiles
  mountPath: /opt/recipes/staticfiles
  size: 5Gi
  persistentVolumeClaim:
    name: staticfiles
    storageClass: mayastor-nvme
- name: mediafiles
  mountPath: /opt/recipes/mediafiles
  size: 5Gi
  persistentVolumeClaim:
    name: mediafiles
    storageClass: mayastor-nvme
- name: nginx-config
  mountPath: /etc/nginx/nginx.conf
  configMap:
    name: recipes-nginx-config
# - name: config
#   mountPath: /config
#   configMap:
#     name: app-configfile
#     items:
#     - key: test.ini
#       path: config.ini
# - name: keys
#   mountPath: /keys
#   readOnly: true
#   secret:
#     secretName: app-keyfile

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: cloudflare
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
    #   grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
  hosts:
  - host: recipes.mcswain.dev
    paths:
    - port: 8080
      path: /
      pathType: Prefix
  tls:
  - secretName: recipes-mcswain-dev-tls
    hosts:
      - recipes.mcswain.dev

probes:
  liveness:
    httpGet:
      path: /
      port: 8080
  readiness:
    httpGet:
      path: /
      port: 8080

resources:
  limits:
    memory: 256Mi
  requests:
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
