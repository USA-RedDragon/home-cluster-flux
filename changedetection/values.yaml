# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: dgtlmoon/changedetection.io
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.45.2@sha256:6154630d5318e50c5085774106d1058ec16201831fa26c6edf381da78657a7b2"

imagePullSecrets:
- name: registry-docker-hub
nameOverride: ""
fullnameOverride: ""

args: []

secrets: []
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs: []
# - name: app-config
#   data:
#     TEST_ENV: alive
# - name: app-otherenv
#   data:
#     SPECIAL_KEY: here
# - name: app-configfile
#   data:
#     test.ini: |
#       [test]
#       value=1

envFrom: []
# - secretRef:
#     name: app-creds
# - configMapRef:
#     name: app-config

env:
- name: BASE_URL
  value: "https://changedetection.mcswain.dev"
- name: PLAYWRIGHT_DRIVER_URL
  value: "ws://localhost:3000/?stealth=1&--disable-web-security=true"
- name: USE_X_SETTINGS
  value: "true"
# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
  - name: http
    port: 5000
  - name: browser
    port: 7900

persistentVolumes:
- name: data
  mountPath: /datastore
  subPath: data
  size: 20Gi
  persistentVolumeClaim:
    name: data
    storageClass: mayastor-nvme
# - name: config
#   mountPath: /config
#   configMap:
#     name: app-configfile
#     items:
#     - key: test.ini
#       path: config.ini
# - name: keys
#   mountPath: /keys
#   readOnly: true
#   secret:
#     secretName: app-keyfile

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: cloudflare
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-signin: https://authentik.mcswain.dev/outpost.goauthentik.io/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
    nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
    #   grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
  hosts:
  - host: changedetection.mcswain.dev
    paths:
    - port: 5000
      path: /
      pathType: Prefix
  tls:
  - secretName: changedetection-mcswain-dev-tls
    hosts:
      - changedetection.mcswain.dev

extraContainers:
- image: browserless/chrome:latest@sha256:ecd8ea1ec9b99b278e4c47e253851db26843d2c8f642589bbdf1b754cbb6e84c
  imagePullPolicy: IfNotPresent
  name: chrome
  env:
  - name: DEFAULT_LAUNCH_ARGS
    value: "[\"--window-size=1920,1080\"]"
  - name: SCREEN_WIDTH
    value: "1920"
  - name: SCREEN_HEIGHT
    value: "1080"
  - name: MAX_CONCURRENT_SESSIONS
    value: "2"
  - name: PREBOOT_CHROME
    value: "true"
  resources:
    limits:
      cpu: 1400m
      memory: 1500Mi
    requests:
      cpu: 800m
      memory: 500Mi

probes:
  liveness:
    httpGet:
      path: /
      port: 5000
    timeoutSeconds: 60
    failureThreshold: 3
  readiness:
    httpGet:
      path: /
      port: 5000
    failureThreshold: 3

resources:
  limits:
    cpu: 400m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
