# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/sdr-enthusiasts/docker-dump978
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "telegraf@sha256:95cd5e1042e3f89e26f9b9cf0dcc5e972f73c9cc1a29089c39033c479747024e"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# command:
# - /scripts/estimate_rtlsdr_ppm.sh

secrets: []
# - name: app-creds
#   data:
#     API_KEY: 'asdfgh123456'
#     SMTP_PASSWORD: '123456asdfgh'
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs: []
# - name: app-config
#   data:
#     TEST_ENV: alive
# - name: app-otherenv
#   data:
#     SPECIAL_KEY: here
# - name: app-configfile
#   data:
#     test.ini: |
#       [test]
#       value=1

envFrom:
- secretRef:
    name: location
# - configMapRef:
#     name: app-config

env:
- name: TZ
  value: America/Chicago
- name: DUMP978_DEVICE_TYPE
  value: rtlsdr
- name: DUMP978_SDR_GAIN
  value: "15.7"
- name: DUMP978_RTLSDR_DEVICE
  value: "00000978"
- name: ENABLE_PROMETHEUS
  value: "true"
# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 999

securityContext:
  sysctls:
  - name: "net.ipv4.ip_unprivileged_port_start"
    value: "0"
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 999
  # runAsGroup: 999
  # fsGroup: 999

service:
  type: ClusterIP
  ports:
  - name: http
    port: 80
  - name: uat
    port: 30978
  - name: metrics
    port: 9273

persistentVolumes:
- name: autogain
  mountPath: /var/globe_history
  subPath: autogain
  size: 1Gi
  persistentVolumeClaim:
    name: autogain
    storageClass: mayastor-nvme

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: cloudflare
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-signin: https://authentik.mcswain.dev/outpost.goauthentik.io/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
    nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
  ingressClassName: nginx
  hosts:
  - host: dump978.mcswain.dev
    paths:
    - port: 80
      path: /
      pathType: Prefix
  tls:
  - secretName: dump978-mcswain-dev-tls
    hosts:
      - dump978.mcswain.dev

probes:
  liveness:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
  readiness:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3

resources:
  limits:
    cpu: 150m
    memory: 150Mi
    squat.ai/rtl-sdr-uat: 1
  requests:
    cpu: 100m
    memory: 100Mi

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
