replicaCount: 1

# Image pull secret to use for registry authentication.
imagePullSecrets:
- name: tfe

# Image sets the repo, name and tag of the Terraform Enterprise image to use.
image:
  tag: v202504-1
  pullPolicy: IfNotPresent

# Resource limits are not set by default, to give the user the ability to set specific resource limits.
# If you do want to specify resource limits, uncomment the following lines and adjust them as necessary.
resources:
  requests:
    memory: "2000Mi"
    cpu: 20m
#  limits:
#    memory: ""
#    cpu: ""

# TLS for end-to-end encrypted transport
tls:
  certificateSecret: tfe-mcswain-dev-tls

# Ingress allows ingress services to be created to allow external access
# from Kubernetes to access Terraform Enterprise pods.
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    cert-manager.io/cluster-issuer: cloudflare
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: tfe.mcswain.dev
      paths:
      - portNumber: 443
        serviceName: "terraform-enterprise"
        path: /
        pathType: Prefix
    - host: tfe-external.mcswain.dev
      paths:
      - portNumber: 443
        serviceName: "terraform-enterprise"
        path: /
        pathType: Prefix
  tls:
    - hosts:
      - tfe.mcswain.dev
      secretName: tfe-mcswain-dev-tls
    - hosts:
      - tfe-external.mcswain.dev
      secretName: tfe-external-mcswain-dev-tls

# Injector service specific configurations
service:
  type: ClusterIP

env:
  secretRefs:
    - name: tfe-secrets
  secretKeyRefs:
    - name: TFE_DATABASE_HOST
      key: host
      secretName: postgresql-app
    - name: TFE_DATABASE_NAME
      key: dbname
      secretName: postgresql-app
    - name: TFE_DATABASE_USER
      key: user
      secretName: postgresql-app
    - name: TFE_DATABASE_PASSWORD
      key: password
      secretName: postgresql-app
    - name: TFE_CAPACITY_CPU
      value: '800000000'
  variables:
    TFE_OPERATIONAL_MODE: external
    TFE_HOSTNAME: tfe.mcswain.dev
    TFE_HOSTNAME_SECONDARY: tfe-external.mcswain.dev
    TFE_OIDC_HOSTNAME_CHOICE: secondary
    TFE_OBJECT_STORAGE_TYPE: "s3"
    TFE_OBJECT_STORAGE_S3_ACCESS_KEY_ID: LgUhs4wSxp2eVT7AtJvN
    TFE_OBJECT_STORAGE_S3_BUCKET: tfe
    TFE_OBJECT_STORAGE_S3_ENDPOINT: https://s3.mcswain.dev
    TFE_OBJECT_STORAGE_S3_REGION: us-east-1
    TFE_REDIS_HOST: redis-app.tfe.svc.cluster.local
    TFE_TLS_KEY_FILE_SECONDARY: /etc/secondary-certs/tls.key
    TFE_TLS_CERT_FILE_SECONDARY: /etc/secondary-certs/tls.crt

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1012

container:
  securityContext:
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #     - ALL

extraVolumes:
  - emptyDir:
      medium: Memory
    name: tmp
  - emptyDir: {}
    name: var-run
  - emptyDir: {}
    name: logs
  - emptyDir: {}
    name: tfe-task-worker-cache
  - name: secondary-certs
    secret:
      secretName: tfe-external-mcswain-dev-tls

extraVolumeMounts:
  - mountPath: /var/run
    name: var-run
  - mountPath: /tmp
    name: tmp
  - mountPath: /var/log/terraform-enterprise
    name: logs
  - mountPath: /var/cache/tfe-task-worker
    name: tfe-task-worker-cache
  - mountPath: /etc/secondary-certs
    name: secondary-certs
