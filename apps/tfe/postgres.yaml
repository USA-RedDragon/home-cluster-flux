---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: smartmetrix-ca
spec:
  isCA: true
  duration: 87600h # 10y
  commonName: smartmetrix-ca
  secretName: smartmetrix-ca-key-pair
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: selfsigned-issuer
    kind: Issuer
    group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: smartmetrix-ca-issuer
spec:
  ca:
    secretName: smartmetrix-ca-key-pair
---
apiVersion: v1
kind: Secret
metadata:
  name: smartmetrix-cert
  labels:
    cnpg.io/reload: ""
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: smartmetrix-cert
spec:
  secretName: smartmetrix-cert
  duration: 87600h # 10y
  usages:
    - server auth
  dnsNames:
    - postgres.mcswain.dev
    - postgresql-rw
    - postgresql-rw.tfe
    - postgresql-rw.tfe.svc
    - postgresql-r
    - postgresql-r.tfe
    - postgresql-r.tfe.svc
    - postgresql-ro
    - postgresql-ro.tfe
    - postgresql-ro.tfe.svc
    - smartmetrix-ro
    - smartmetrix-ro.tfe
    - smartmetrix-ro.tfe.svc
  issuerRef:
    name: smartmetrix-ca-issuer
    kind: Issuer
    group: cert-manager.io
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgresql
  namespace: tfe
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.8-13
  enableSuperuserAccess: true
  postgresql:
    pg_hba:
      - hostssl smartmetrix smartmetrix all scram-sha-256
  bootstrap:
    initdb:
      database: tfe
      owner: tfe
  certificates:
    serverTLSSecret: smartmetrix-cert
    serverCASecret: smartmetrix-cert
  managed:
    roles:
      - name: smartmetrix
        ensure: present
        login: true
        passwordSecret:
          name: postgresql-smartmetrix
        inRoles:
          - pg_read_all_data
  backup:
    barmanObjectStore:
      destinationPath: "s3://cnpg/tfe"
      endpointURL: "https://s3.mcswain.dev"
      s3Credentials:
        accessKeyId:
          name: cnpg-minio
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: cnpg-minio
          key: AWS_SECRET_ACCESS_KEY
      wal:
        compression: gzip
    retentionPolicy: "4w"
  storage:
    size: 10Gi
  monitoring:
    enablePodMonitor: true
  resources:
    requests:
      memory: 80Mi
      cpu: 20m
    limits:
      # The backup process is quite memory intensive
      memory: 600Mi
  smartShutdownTimeout: 30
  stopDelay: 300
---
apiVersion: v1
kind: Secret
metadata:
 name: cnpg-minio
 annotations:
   reflector.v1.k8s.emberstack.com/reflects: reflector/cnpg-minio
type: Opaque
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: backup
spec:
  immediate: true
  schedule: "0 0 * * * *"
  backupOwnerReference: self
  cluster:
    name: postgresql
