# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.4.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json

controllers:
  scrypted:
    replicas: 1
    pod:
      priorityClassName: system-cluster-critical
      nodeSelector:
        google.feature.node.kubernetes.io/coral: "true"
    containers:
      scrypted:
        securityContext:
          privileged: true
        image:
          repository: ghcr.io/koush/scrypted
          tag: v0.123.43-jammy-full@sha256:b0322b9bece3b173e210ab0ada4df5d469218b7157141dc9d952f29a6511e9d4
          pullPolicy: IfNotPresent
        resources:
          requests:
            cpu: '2'
            memory: 5Gi
        probes:
          liveness:
            enabled: true
          readiness:
            enabled: true
          startup:
            enabled: true
        env:
          - name: SCRYPTED_NVR_VOLUME
            value: /nvr

service:
  scrypted:
    controller: scrypted
    ports:
      http:
        port: 10443
      http-insecure:
        port: 11080
      cloud:
        port: 12443

persistence:
  nvr:
    enabled: true
    type: nfs
    path: /mnt/data/nvr
    server: 192.168.1.135
  usb:
    enabled: true
    type: hostPath
    hostPath: /dev/bus/usb
    hostPathType: Directory
  usb-sys:
    enabled: true
    type: hostPath
    hostPath: /sys/bus/usb
    hostPathType: Directory
  data:
    type: persistentVolumeClaim
    storageClass: longhorn-ssd
    size: 2Gi
    accessMode: ReadWriteOnce
    advancedMounts:
      scrypted:
        scrypted:
          - path: /server/volume
  scrub:
    type: persistentVolumeClaim
    storageClass: longhorn-nvme
    size: 300Gi
    accessMode: ReadWriteOnce

ingress:
  nginx:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: cloudflare
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    hosts:
      - host: nvr.mcswain.dev
        paths:
          - path: /
            service:
              identifier: scrypted
              port: http
    tls:
      - hosts:
          - nvr.mcswain.dev
        secretName: nvr-mcswain-dev
  cloud:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: cloudflare
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    hosts:
      - host: cloud.nvr.mcswain.dev
        paths:
          - path: /
            service:
              identifier: scrypted
              port: cloud
    tls:
      - hosts:
          - cloud.nvr.mcswain.dev
        secretName: cloud-nvr-mcswain-dev
