# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 0

image:
  repository: healthchecks/healthchecks
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v3.4@sha256:daef2ebf30cce0927a94703fea18360fe1a723d545a6567b11ea8a0cd12a960e"

imagePullSecrets:
- name: registry-docker-hub
nameOverride: ""
fullnameOverride: ""

command:
- bash
- -c
- uwsgi -b 32768 /opt/healthchecks/docker/uwsgi.ini

secrets: []
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs: []
# - name: app-config
#   data:
#     TEST_ENV: alive
# - name: app-otherenv
#   data:
#     SPECIAL_KEY: here
# - name: app-configfile
#   data:
#     test.ini: |
#       [test]
#       value=1

envFrom:
- secretRef:
    name: healthchecks
# - configMapRef:
#     name: app-config

env:
- name: ADMINS
  value: "jacob@mcswain.dev"
- name: DEFAULT_FROM_EMAIL
  value: healthchecks@mcswain.dev
- name: EMAIL_HOST
  value: email.mcswain.dev
- name: EMAIL_HOST_USER
  value: healthchecks
- name: EMAIL_PORT
  value: "465"
- name: EMAIL_USE_TLS
  value: "False"
- name: EMAIL_USE_SSL
  value: "True"
- name: SITE_ROOT
  value: https://healthchecks.mcswain.dev
- name: DB
  value: postgres
- name: DB_HOST
  valueFrom:
    secretKeyRef:
      name: postgresql-app
      key: host
- name: DB_NAME
  valueFrom:
    secretKeyRef:
      name: postgresql-app
      key: dbname
- name: REGISTRATION_OPEN
  value: "False"
- name: DEBUG
  value: "False"
- name: DB_PASSWORD
  valueFrom:
    secretKeyRef:
      name: postgresql-app
      key: password
- name: DB_USER
  valueFrom:
    secretKeyRef:
      name: postgresql-app
      key: username
# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
  - name: http
    port: 8000

persistentVolumes:
- name: data
  mountPath: /data
  subPath: data
  size: 20Gi
  persistentVolumeClaim:
    name: data
    storageClass: longhorn-ssd
# - name: config
#   mountPath: /config
#   configMap:
#     name: app-configfile
#     items:
#     - key: test.ini
#       path: config.ini
# - name: keys
#   mountPath: /keys
#   readOnly: true
#   secret:
#     secretName: app-keyfile

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: cloudflare
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  ingressClassName: nginx
  hosts:
  - host: healthchecks.mcswain.dev
    paths:
    - port: 8000
      path: /
      pathType: Prefix
  tls:
  - secretName: healthchecks-mcswain-dev-tls
    hosts:
      - healthchecks.mcswain.dev

extraContainers: []

probes:
  liveness:
    httpGet:
      path: /
      port: 8000
  readiness:
    httpGet:
      path: /
      port: 8000

resources:
  limits:
    memory: 350Mi
  requests:
    cpu: 10m
    memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
