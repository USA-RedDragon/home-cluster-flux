# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

deploymentStrategy:
  type: RollingUpdate

image:
  repository: ghcr.io/usa-reddragon/rtz-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.0.155"

args: []
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

secrets: []
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs: []
# - name: app-config
#   data:
#     TEST_ENV: alive
# - name: app-otherenv
#   data:
#     SPECIAL_KEY: here
# - name: app-configfile
#   data:
#     test.ini: |
#       [test]
#       value=1

envFrom: []
# - secretRef:
#     name: secrets
# - configMapRef:
#     name: app-config

env:
- name: HTTP__CORS_HOSTS
  value: "https://openpilot.jacob.network,http://localhost:5173,https://connect-frontend-80j.pages.dev,https://*.connect-frontend-80j.pages.dev"
- name: HTTP__TRUSTED_PROXIES
  value: "172.17.0.0/16"
- name: REGISTRATION__ENABLED
  value: "true"
- name: PERSISTENCE__DATABASE__DRIVER
  value: "postgres"
- name: PERSISTENCE__DATABASE__DATABASE
  valueFrom:
    secretKeyRef:
      name: postgresql-app
      key: dbname
- name: PERSISTENCE__DATABASE__USERNAME
  valueFrom:
    secretKeyRef:
      name: postgresql-app
      key: username
- name: PERSISTENCE__DATABASE__PASSWORD
  valueFrom:
    secretKeyRef:
      name: postgresql-app
      key: password
- name: PERSISTENCE__DATABASE__PORT
  valueFrom:
    secretKeyRef:
      name: postgresql-app
      key: port
- name: PERSISTENCE__DATABASE__HOST
  valueFrom:
    secretKeyRef:
      name: postgresql-app
      key: host

- name: AUTH__GITHUB__CLIENT_ID
  valueFrom:
    secretKeyRef:
      name: rtz
      key: github-client-id
- name: AUTH__GITHUB__CLIENT_SECRET
  valueFrom:
    secretKeyRef:
      name: rtz
      key: github-client-secret
- name: AUTH__GOOGLE__CLIENT_ID
  valueFrom:
    secretKeyRef:
      name: rtz
      key: google-client-id
- name: AUTH__GOOGLE__CLIENT_SECRET
  valueFrom:
    secretKeyRef:
      name: rtz
      key: google-client-secret

- name: HTTP__FRONTEND_URL
  value: 'https://connect-frontend-80j.pages.dev'
- name: HTTP__BACKEND_URL
  value: 'https://openpilot.jacob.network'
- name: JWT__SECRET
  valueFrom:
    secretKeyRef:
      name: rtz
      key: jwt-secret

- name: REDIS__ENABLED
  value: "true"
- name: REDIS__SENTINEL__ENABLED
  value: "true"
- name: REDIS__SENTINEL__ADDRESSES
  value: "redis-headless:26379"
- name: REDIS__SENTINEL__MASTER_NAME
  value: "mymaster"
- name: REDIS__SENTINEL__PASSWORD
  valueFrom:
    secretKeyRef:
      name: redis-auth
      key: password
- name: REDIS__PASSWORD
  valueFrom:
    secretKeyRef:
      name: redis-auth
      key: password

- name: HTTP__METRICS__ENABLED
  value: "true"
- name: HTTP__METRICS__IPV4_HOST
  value: "0.0.0.0"
- name: HTTP__PPROF__ENABLED
  value: "false"
# - name: HTTP__TRACING__ENABLED
#   value: "true"
# - name: HTTP__TRACING__OTLP_ENDPOINT
#   value: signoz-k8s-infra-otel-agent.signoz.svc.cluster.local:4317
- name: MAPBOX__PUBLIC_TOKEN
  valueFrom:
    secretKeyRef:
      name: rtz
      key: mapbox-public-token
- name: MAPBOX__SECRET_TOKEN
  valueFrom:
    secretKeyRef:
      name: rtz
      key: mapbox-secret-token

podAnnotations: {}

podSecurityContext:
  fsGroup: 65534

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  fsGroup: 65534

service:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
  - name: metrics
    port: 8081

persistentVolumes:
- name: uploads
  mountPath: /uploads
  size: 1Ti
  persistentVolumeClaim:
    name: rtz-uploads
    storageClass: rtz-uploads

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: cloudflare
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 32M
    # 2-minute timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
  ingressClassName: nginx
  hosts:
  - host: openpilot.jacob.network
    paths:
    - port: 8080
      path: /
      pathType: Prefix
  tls:
  - secretName: openpilot-jacob-network-tls
    hosts:
      - openpilot.jacob.network

probes:
  liveness:
    httpGet:
      path: /health
      port: http
  readiness:
    httpGet:
      path: /health
      port: http

resources:
  limits:
    memory: 500Mi
  requests:
    cpu: 250m
    memory: 100Mi

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
