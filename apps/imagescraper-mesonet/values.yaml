# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.4.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json

x-scrape-job: &scrapejob
  type: cronjob
  cronjob:
    schedule: "*/5 * * * *"
    concurrencyPolicy: Forbid
  pod:
    securityContext:
      fsGroup: 65535
  containers:
    process-and-upload: &scrapejob-container
      image:
        repository: ghcr.io/usa-reddragon/magick-s3
        tag: 7.1.1.41@sha256:b29e651570230f8bbfd6060f654d147cc60ef4738018615d63417fa50c7f45c5
        pullPolicy: IfNotPresent
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65535
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
      command:
        - /bin/sh
        - -c
        - |
          set -euo pipefail
          TS=$(date +%s)
          curl -fSsL -o "/tmp/${TS}.png" "https://data.mesonet.org/data/public/mesonet/maps/realtime/current.${MESONET_IMAGE}.grad.png?cache_bust=${TS}"
          aws s3 --endpoint-url https://s3.mcswain.dev cp "/tmp/${TS}.png" "s3://${BUCKET_NAME}/${TS}.png"
          aws s3 --endpoint-url https://s3.mcswain.dev cp "s3://${BUCKET_NAME}/list.txt" /tmp/list.txt || true
          echo "${TS}.png" >> /tmp/list.txt
          aws s3 --endpoint-url https://s3.mcswain.dev cp /tmp/list.txt "s3://${BUCKET_NAME}/list.txt"

controllers:
  scrape-tdew:
    <<: *scrapejob
    containers:
      process-and-upload:
        <<: *scrapejob-container
        envFrom:
          - secretRef:
              name: mesonet-tdew-s3
        env:
          MESONET_IMAGE: TDEW_WSPD
          BUCKET_NAME: mesonet-tdew

  scrape-humidity:
    <<: *scrapejob
    containers:
      process-and-upload:
        <<: *scrapejob-container
        envFrom:
          - secretRef:
              name: mesonet-relh-s3
        env:
          MESONET_IMAGE: RELH
          BUCKET_NAME: mesonet-relh

  scrape-dewpoint-depression:
    <<: *scrapejob
    containers:
      process-and-upload:
        <<: *scrapejob-container
        envFrom:
          - secretRef:
              name: mesonet-dewd-s3
        env:
          MESONET_IMAGE: DEWD
          BUCKET_NAME: mesonet-dewd

  scrape-moisture-convergence:
    <<: *scrapejob
    containers:
      process-and-upload:
        <<: *scrapejob-container
        envFrom:
          - secretRef:
              name: mesonet-qdiv-s3
        env:
          MESONET_IMAGE: QDIV
          BUCKET_NAME: mesonet-qdiv

  scrape-air-temp:
    <<: *scrapejob
    containers:
      process-and-upload:
        <<: *scrapejob-container
        envFrom:
          - secretRef:
              name: mesonet-tair-s3
        env:
          MESONET_IMAGE: TAIR
          BUCKET_NAME: mesonet-tair

  scrape-9meter-air-temp:
    <<: *scrapejob
    containers:
      process-and-upload:
        <<: *scrapejob-container
        envFrom:
          - secretRef:
              name: mesonet-ta9m-s3
        env:
          MESONET_IMAGE: TA9M
          BUCKET_NAME: mesonet-ta9m

  scrape-theta-e:
    <<: *scrapejob
    containers:
      process-and-upload:
        <<: *scrapejob-container
        envFrom:
          - secretRef:
              name: mesonet-thte-s3
        env:
          MESONET_IMAGE: THTE
          BUCKET_NAME: mesonet-thte

persistence:
  tmp:
    enabled: true
    type: emptyDir
    medium: Memory
    sizeLimit: 1Gi
    globalMounts:
      - path: /tmp
