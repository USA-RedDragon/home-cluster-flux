tenant:
  name: mattermost

  image:
    repository: ghcr.io/usa-reddragon/minio
    tag: RELEASE.2024-08-03T04-33-23Z@sha256:8783c4ca898332076ea8124cdccc6a79d6a7bc72beb5c58eb509b4e5122f321b

  configuration:
    name: mattermost-minio

  pools:
    - servers: 5
      name: pool
      volumesPerServer: 1
      size: 30Gi
      storageClassName: longhorn-nvme
      labels:
        policy.mcswain.dev/egress-coredns: "true"
        policy.mcswain.dev/egress-kubeapi: "true"
        policy.mcswain.dev/egress-namespace: "true"
        policy.mcswain.dev/ingress-namespace: "true"
        policy.mcswain.dev/ingress-nginx: "true"
      resources: { }

  metrics:
    enabled: true

  ###
  # MinIO features to enable or disable in the MinIO Tenant
  # See `Operator CRD: Features <https://min.io/docs/minio/kubernetes/upstream/reference/operator-crd.html#features>`__.
  features:
    bucketDNS: false
    domains:
      minio: [https://s3.mattermost.mcswain.dev]
      console: https://minio.mattermost.mcswain.dev

  buckets:
  - name: mattermost

  ###
  # Array of Kubernetes secrets from which the Operator generates MinIO users during tenant provisioning.
  #
  # Each secret should specify the ``CONSOLE_ACCESS_KEY`` and ``CONSOLE_SECRET_KEY`` as the access key and secret key for that user.
  users:
  - name: mattermost-minio

  logging:
    json: true

  env:
    - name: MINIO_PROMETHEUS_URL
      value: thanos-querier-app.monitoring.svc.cluster.local:9090
    - name: MINIO_PROMETHEUS_AUTH_TYPE
      value: none

ingress:
  api:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: cloudflare
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    tls:
    - hosts:
      - s3.mattermost.mcswain.dev
      secretName: s3.mattermost.mcswain.dev-tls
    host: s3.mattermost.mcswain.dev
    path: /
    pathType: Prefix
  console:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: cloudflare
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    tls:
    - hosts:
      - minio.mattermost.mcswain.dev
      secretName: minio.mattermost.mcswain.dev-tls
    host: minio.mattermost.mcswain.dev
    path: /
    pathType: Prefix
