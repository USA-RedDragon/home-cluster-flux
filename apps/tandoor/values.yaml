# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.4.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json

controllers:
  tandoor:
    replicas: 1
    pod:
      imagePullSecrets:
        - name: registry-docker-hub
    containers:
      tandoor:
        image:
          repository: vabene1111/recipes
          tag: 1.5.31@sha256:063eb446e2981a737c8722642acef6aeacbd7b33f672a982209bd82c068b1a2c
          pullPolicy: IfNotPresent
        resources:
          limits:
            memory: 350Mi
          requests:
            memory: 250Mi
        envFrom:
          - secretRef:
              name: app-secrets
        env:
          - name: DB_ENGINE
            value: django.db.backends.postgresql
          - name: POSTGRES_PORT
            value: "5432"
          - name: TZ
            value: "America/Chicago"
          - name: GUNICORN_MEDIA
            value: "0"
          - name: GUNICORN_WORKERS
            value: "2"
          - name: GUNICORN_THREADS
            value: "2"
          - name: SOCIAL_PROVIDERS
            value: allauth.socialaccount.providers.openid_connect
          - name: EMAIL_HOST
            value: email.mcswain.dev
          - name: EMAIL_PORT
            value: "465"
          - name: EMAIL_HOST_USER
            value: tandoor
          - name: EMAIL_USE_TLS
            value: "0"
          - name: EMAIL_USE_SSL
            value: "1"
          - name: DEFAULT_FROM_EMAIL
            value: recipes@mcswain.dev
          - name: ACCOUNT_EMAIL_SUBJECT_PREFIX
            value: '[Recipes] '
          - name: ENABLE_PDF_EXPORT
            value: "1"
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql-app
                key: password
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgresql-app
                key: username
          - name: POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: postgresql-app
                key: host
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: postgresql-app
                key: dbname
      nginx:
        image:
          repository: nginx
          tag: mainline-alpine@sha256:679a5fd058f6ca754a561846fe27927e408074431d63556e8fc588fc38be6901
          pullPolicy: IfNotPresent
        probes:
          liveness:
            enabled: true
          readiness:
            enabled: true
          startup:
            enabled: true

configMaps:
  nginx-config:
    enabled: true
    data:
      nginx-config: |-
        events {
          worker_connections 1024;
        }
        http {
          include mime.types;
          server {
            listen 80;
            server_name _;
            access_log /dev/stdout;
            error_log /dev/stderr;

            client_max_body_size 16M;

            # serve static files
            location /static/ {
              alias /static/;
            }
            # serve media files
            location /media/ {
              alias /media/;
            }
          }
        }

service:
  tandoor:
    controller: tandoor
    ports:
      http:
        port: 8080
      nginx:
        port: 80

persistence:
  staticfiles:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: longhorn-ssd
    globalMounts:
      - path: /opt/recipes/staticfiles
  mediafiles:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: longhorn-ssd
    globalMounts:
      - path: /opt/recipes/mediafiles
  nginx-config:
    enabled: true
    type: configMap
    name: tandoor-nginx-config
    advancedMounts:
      tandoor:
        nginx:
          - path: /etc/nginx/nginx.conf
            subPath: nginx-config

ingress:
  nginx:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: cloudflare
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
    hosts:
      - host: recipes.mcswain.dev
        paths:
          - path: /
            service: &svc
              identifier: tandoor
              port: http
    tls: &tls
      - hosts:
          - recipes.mcswain.dev
        secretName: recipes-mcswain-dev
  redirect-login:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: cloudflare
      nginx.ingress.kubernetes.io/temporal-redirect: /accounts/oidc/authentik/login
    hosts:
      - host: recipes.mcswain.dev
        paths:
          - path: /accounts/login
            service: *svc
    tls: *tls
