# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.4.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json

controllers:
  jellyfin:
    replicas: 1
    pod:
      nodeSelector:
        nvidia.com/gpu.product: NVIDIA-GeForce-RTX-2070
      runtimeClassName: nvidia
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
    containers:
      jellyfin:
        image:
          repository: jacob.pub/docker.io/jellyfin/jellyfin
          tag: 10.11.1
          pullPolicy: IfNotPresent
        resources:
          requests:
            cpu: '2'
            memory: 10Gi
          limits:
            cpu: '4'
            memory: 15Gi
            nvidia.com/gpu: 1
        probes:
          liveness:
            enabled: true
            spec:
              initialDelaySeconds: 20
          readiness:
            enabled: true
            spec:
              initialDelaySeconds: 20
          startup:
            enabled: true
            spec:
              initialDelaySeconds: 20
        env:
          - name: JELLYFIN_PublishedServerUrl
            value: https://jellyfin.mcswain.dev
          - name: JELLYFIN_FFmpeg__probesize
            value: 20M
          - name: NVIDIA_VISIBLE_DEVICES
            value: all
          - name: NVIDIA_DRIVER_CAPABILITIES
            value: all
        securityContext:
          fsGroup: 568
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL

service:
  jellyfin:
    controller: jellyfin
    ports:
      http:
        port: 8096

persistence:
  config:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 60Gi
    storageClass: longhorn-ssd
  cache:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 15Gi
    storageClass: longhorn-ssd
  cache-transcodes:
    enabled: true
    type: emptyDir
    medium: Memory
    sizeLimit: 10Gi
    globalMounts:
      - path: /cache/transcodes
  jellyfin-tmp:
    enabled: true
    type: emptyDir
    sizeLimit: 30Gi
    globalMounts:
      - path: /tmp/jellyfin
  media:
    enabled: true
    type: nfs
    path: /mnt/data/media
    server: 192.168.1.135

ingress:
  jellyfin:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: cloudflare
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
      nginx.ingress.kubernetes.io/server-snippet: |
        location /metrics {
            deny all;
            return 404;
        }
    hosts:
      - host: jellyfin.mcswain.dev
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: jellyfin
              port: http
    tls:
      - hosts:
          - jellyfin.mcswain.dev
        secretName: jellyfin-mcswain-dev
  tailscale:
    enabled: true
    className: tailscale
    hosts:
      - host: jellyfin
        paths:
        - path: /
          pathType: Prefix
          service:
              identifier: jellyfin
              port: http
    tls:
      - hosts:
          - jellyfin

serviceMonitor:
  jellyfin:
    enabled: true
    serviceName: jellyfin
    endpoints:
      - port: http
        scheme: http
        path: /metrics
        interval: 10s
        scrapeTimeout: 10s
