# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.4.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json

controllers:
  kosync:
    replicas: 1
    pod:
      imagePullSecrets:
        - name: registry-docker-hub
    containers:
      kosync:
        image:
          repository: koreader/kosync
          tag: 1.0.1.3
          pullPolicy: IfNotPresent
        resources:
          requests: {}
          limits: {}
        probes:
          liveness:
            enabled: true
          readiness:
            enabled: true
          startup:
            enabled: true
        securityContext:
          capabilities:
            drop:
              - ALL

service:
  kosync:
    controller: kosync
    ports:
      http:
        port: 7200

persistence:
  redis:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 2Gi
    storageClass: longhorn-ssd
    globalMounts:
      - path: /var/lib/redis
  redis-logs:
    enabled: true
    type: emptyDir
    sizeLimit: 1Gi
    globalMounts:
      - path: /var/log/redis
  app-logs:
    enabled: true
    type: emptyDir
    sizeLimit: 1Gi
    globalMounts:
      - path: /app/koreader-sync-server/logs

ingress:
  kosync:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: cloudflare
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: kosync.mcswain.dev
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: kosync
              port: http
    tls:
      - hosts:
          - kosync.mcswain.dev
        secretName: kosync-mcswain-dev
  tailscale:
    enabled: true
    className: tailscale
    hosts:
      - host: kosync
        paths:
        - path: /
          pathType: Prefix
          service:
              identifier: kosync
              port: http
    tls:
      - hosts:
          - kosync
