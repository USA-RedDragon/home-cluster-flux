apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgresql
  namespace: renovate-ce
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1-12
  enableSuperuserAccess: true
  bootstrap:
    recovery:
      database: renovate-ce
      owner: renovate-ce
      source: postgresql
  backup:
    barmanObjectStore:
      destinationPath: "s3://cnpg/renovate-ce"
      endpointURL: "https://s3.mcswain.dev"
      s3Credentials:
        accessKeyId:
          name: cnpg-minio
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: cnpg-minio
          key: AWS_SECRET_ACCESS_KEY
      wal:
        compression: gzip
  externalClusters:
  - barmanObjectStore:
      destinationPath: s3://cnpg/atuin
      endpointURL: https://s3.mcswain.dev
      s3Credentials:
        accessKeyId:
          key: AWS_ACCESS_KEY_ID
          name: cnpg-minio
        secretAccessKey:
          key: AWS_SECRET_ACCESS_KEY
          name: cnpg-minio
      wal:
        compression: gzip
    name: postgresql
  storage:
    size: 12Gi
  monitoring:
    enablePodMonitor: true
  resources:
    requests:
      memory: 80Mi
      cpu: 20m
    limits:
      # The backup process is quite memory intensive
      memory: 600Mi
  smartShutdownTimeout: 30
  stopDelay: 300
---
apiVersion: v1
kind: Secret
metadata:
 name: cnpg-minio
 annotations:
   reflector.v1.k8s.emberstack.com/reflects: reflector/cnpg-minio
type: Opaque
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: backup
spec:
  immediate: true
  schedule: "0 0 * * * *"
  backupOwnerReference: self
  cluster:
    name: postgresql
