image:
  repository: ghcr.io/mend/renovate-ce
  tag: 7.0.1-full
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

renovate:
  extraEnvVars:
  - name: RENOVATE_PAGINATE_ALL
    value: 'true'
  - name: RENOVATE_PERSIST_REPO_DATA
    value: 'true'
  - name: RENOVATE_ONBOARDING_CONFIG
    value: "{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"extends\": [\n    \"local>USA-RedDragon/renovate-configs\"\n  ]\n}"
  # You must accept the Mend Terms of Service to use the image.
  # Please read https://www.mend.io/terms-of-service/
  # Set this value to 'y' to consent.
  mendRnvAcceptTos: 'y'

  # Which platform Mend Renovate will connect to. For example "github" or "gitlab"
  mendRnvPlatform: github

  # API endpoint, include trailing slash. Examples: https://api.github.com/, https://gitlab.com/api/v4/
  mendRnvEndpoint: https://api.github.com/

  # Optional: Set to 'true' to enable Admin APIs. Defaults to 'false'.
  mendRnvAdminApiEnabled: 'true'

  # Existing secret with secret values with the following keys:
  #   mendRnvLicenseKey:
  #   mendRnvGitlabPat:
  #   mendRnvGithubAppId:
  #   mendRnvGithubAppKey:
  #   mendRnvWebhookSecret:
  #   mendRnvServerApiSecret:
  #   githubComToken:
  #   pipIndexUrl:
  existingSecret: renovate-secrets

  # Optional, defaults to '0 * * * *' (hourly)
  mendRnvCronJobScheduler: '*/5 * * * *'

  # Optional, defaults to '0 0,4,8,12,16,20 * * *' (every 4 hours)
  mendRnvCronAppSync: '*/15 * * * *'

  # Optional, a string of a comma separated values. (e.g. `org1/*, org2/test*, org2/test*`). Same behavior as Renovate cli 'autodiscoverFilter' feature
  # Warning: The Renovate CLI 'autodiscover' configuration option is disabled.
  # Repository filtering should solely rely on server-side filtering using 'mendRnvAutoDiscoverFilter'.
  mendRnvAutoDiscoverFilter: 'USA-RedDragon/*'

  # Optional. Accepted values: 'enabled', 'discovered', and 'disabled'. Defaults to 'discovered'.
  mendRnvEnqueueJobsOnStartup:

  # Optional. Specify a directory path to save Renovate job log files.
  # It is recommended to use an external volume to preserve history.
  mendRnvLogHistoryDir:

  # Optional: The number of days to save log files. Defaults to 30.
  mendRnvLogHistoryTTLDays:

  # Optional: Specifies a 5-part cron schedule. Defaults to `0 0 * * *` (every midnight).
  # This cron job cleans up log history in the directory defined by `mendRnvLogHistoryDir`.
  # It deletes any log file that exceeds the `mendRnvLogHistoryTTLDays` value.
  mendRnvLogHistoryCleanupCron:

  # Optional: Sets the maximum execution duration of a Renovate CLI scan in minutes. Defaults to 60.
  mendRnvWorkerExecutionTimeout:

  # Self-hosted renovate configuration file, will be mounted as a config map
  config: |
    module.exports = {
      // Enter self-hosted configuration options here.
      // https://docs.renovatebot.com/self-hosted-configuration/
      autodiscover: true,
      cacheHardTtlMinutes: 5,
      onboardingConfigFileName: ".github/renovate.json",
      onboardingRebaseCheckbox: true,
    }

  # Npmrc file. Will be mounted as a secret
  # npmrc: |
    # //registry.npmjs.org/:_authToken=xxxxxx

  # Existing secret with npmrc configuration with key:
  #   .npmrc:
  npmrcExistingSecret:

  # Disable NodeJS SSL verify (do not use for production)
  noNodeTlsVerify: false

  # Disable GIT SSL verify (do not use for production)
  noGitTlsVerify: false

  # Set User Agent Mend Renovate will use to query the registries
  # defaults to https://github.com/renovatebot/renovate
  renovateUserAgent:

  # Set log level, defaults to 'info'. Allowed values: fatal, error, warn, info, debug, trace
  logLevel: info

## Cache Persistence Parameters
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
cachePersistence:
  ## Enable persistence using Persistent Volume Claims
  enabled: false
  ## Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  storageClass: "longhorn-nvme"
  ## @param Persistent Volume access modes
  accessModes:
    - ReadWriteOnce
  ## Persistent Volume size
  size: 60Gi
  ## The name of an existing PVC to use for persistence
  existingClaim: ""

service:
  type: ClusterIP
  port: 80
  annotations:
    {}
    # cloud.google.com/load-balancer-type: "Internal"

ingress:
  enabled: true

  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx

  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: cloudflare
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  ingressClassName: nginx
  hosts:
    - renovate.mcswain.dev
  tls:
    - secretName: renovate-mcswain-dev-tls
      hosts:
        - renovate.mcswain.dev

resources:
  requests:
    cpu: '1'
    memory: 3Gi
  limits:
    memory: 4Gi

annotations: {}

labels:
  pods: {}

nodeSelector: {}

tolerations: []

affinity: {}

podSecurityContext:
  fsGroup: 1000

# This allows renovate to finish running for a repo and then gracefully exit
terminationGracePeriodSeconds: 60

livenessProbe:
  initialDelaySeconds: 60
  httpGet:
    path: /health
    port: http
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /health
    port: http
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

extraVolumes:
  []
  # - name: secrets-store-inline
  #   csi:
  #     driver: secrets-store.csi.k8s.io
  #     readOnly: true
  #     volumeAttributes:
  #       secretProviderClass: "some-secret-store"

extraVolumeMounts:
  []
  # - name: secrets-store-inline
  #   mountPath: "/mnt/secrets-store"
  #   readOnly: true
