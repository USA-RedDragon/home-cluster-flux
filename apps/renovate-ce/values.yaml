license:
  mendRnvLicenseKey: '${LICENSE_KEY}'
  mendRnvAcceptTos: 'y'

renovateWorker:
  image:
    repository: ghcr.io/usa-reddragon/renovate-ee-worker
    version: 9.9.2@sha256:ac913e6e9944f624cdaff65580403f8ed02aa67bbac6878c1b5629d3d01d8d94

  existingSecret: renovate-secrets
  replicas: 2

  extraEnvVars:
  - name: RENOVATE_REPOSITORY_CACHE
    value: 'enabled'
  - name: LOG_LEVEL
    value: debug
  - name: RENOVATE_PAGINATE_ALL
    value: 'true'
  - name: RENOVATE_PERSIST_REPO_DATA
    value: 'false'
  - name: RENOVATE_PLATFORM_COMMIT
    value: 'true'
  - name: RENOVATE_REPOSITORY_CACHE_TYPE
    value: 's3://renovate/repository-cache/'
  - name: RENOVATE_S3_ENDPOINT
    value: 'https://s3.mcswain.dev'
  - name: AWS_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: renovate-secrets
        key: aws-access-key-id
  - name: AWS_REGION
    value: 'us-east-1'
  - name: AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: renovate-secrets
        key: aws-secret-access-key
  - name: RENOVATE_S3_PATH_STYLE
    value: 'true'
  - name: RENOVATE_ONBOARDING_CONFIG
    value: "{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"extends\": [\n    \"local>USA-RedDragon/renovate-configs\"\n  ]\n}"
  - name: GHCR_USERNAME
    valueFrom:
      secretKeyRef:
        name: renovate-secrets
        key: ghcr-username
  - name: GHCR_PASSWORD
    valueFrom:
      secretKeyRef:
        name: renovate-secrets
        key: ghcr-password
  - name: DOCKER_HUB_USERNAME
    valueFrom:
      secretKeyRef:
        name: renovate-secrets
        key: docker-hub-username
  - name: DOCKER_HUB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: renovate-secrets
        key: docker-hub-password

  # Optional: Sets the maximum execution duration of a Renovate CLI scan in minutes. Defaults to 60.
  mendRnvWorkerExecutionTimeout:


  # Self-hosted renovate configuration file, will be mounted as a config map
  config: |
    module.exports = {
      // Enter self-hosted configuration options here.
      // https://docs.renovatebot.com/self-hosted-configuration/
      cacheHardTtlMinutes: 5,
      onboardingConfigFileName: ".github/renovate.json",
      onboardingRebaseCheckbox: true,
      hostRules: [
        {
          hostType: 'docker',
          matchHost: 'ghcr.io',
          username: process.env.GHCR_USERNAME,
          password: process.env.GHCR_PASSWORD,
        },
        {
          hostType: 'docker',
          matchHost: 'docker.io',
          username: process.env.DOCKER_HUB_USERNAME,
          password: process.env.DOCKER_HUB_PASSWORD,
        },
      ],
    }

  # Npmrc file. Will be mounted as a secret
  # npmrc: |
    # //registry.npmjs.org/:_authToken=xxxxxx

  # Existing secret with npmrc configuration with key:
  #   .npmrc:
  npmrcExistingSecret:

  # Disable NodeJS SSL verify (do not use for production)
  noNodeTlsVerify: false

  # Disable GIT SSL verify (do not use for production)
  noGitTlsVerify: false

  # Set User Agent Mend Renovate will use to query the registries
  # defaults to https://github.com/renovatebot/renovate
  renovateUserAgent:

  logLevel: info

  resources:
    requests:
      cpu: '1'
      memory: 8Gi
    limits:
      memory: 12Gi

  readinessProbe:
    failureThreshold: 6

  livenessProbe:
    failureThreshold: 6

  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
    readOnlyRootFilesystem: false
    capabilities:
      drop:
        - ALL

renovateServer:
  image:
    repository: ghcr.io/usa-reddragon/renovate-ee
    version: v9.9.2

  replicas: 2

  extraEnvVars:
  - name: MEND_RNV_REPORTING_ENABLED
    value: 'true'

  mendRnvPlatform: github
  mendRnvEndpoint: https://api.github.com/
  mendRnvAdminApiEnabled: 'true'

  # Existing secret with secret values with the following keys:
  #   mendRnvGitlabPat:
  #   mendRnvGithubAppId:
  #   mendRnvGithubAppKey:
  #   mendRnvWebhookSecret:
  #   mendRnvServerApiSecret:
  existingSecret: renovate-secrets

  # Optional, defaults to '0 * * * *' (hourly)
  mendRnvCronJobSchedulerAll: '*/5 * * * *'

  mendRnvDiskUsageWarnThreshold: 0

  # Optional. valid values: 'disabled', 'enabled', 'managed' and default to unset (see documentation)
  mendRnvForksProcessing: enabled

  # Optional, defaults to '0 0,4,8,12,16,20 * * *' (every 4 hours)
  mendRnvCronAppSync: '*/15 * * * *'

  # Optional, a string of a comma separated values. (e.g. `org1/*, org2/test*, org2/test*`). Same behavior as Renovate cli 'autodiscoverFilter' feature
  # Warning: The Renovate CLI 'autodiscover' configuration option is disabled.
  # Repository filtering should solely rely on server-side filtering using 'mendRnvAutoDiscoverFilter'.
  mendRnvAutoDiscoverFilter: 'kubewg-net/*,AstroGardenLLC/*,USA-RedDragon/*'

  # Optional. Accepted values: 'enabled', 'discovered', and 'disabled'. Defaults to 'discovered'.
  mendRnvEnqueueJobsOnStartup: disabled

  # Optional. Specify a directory path to save Renovate job log files.
  # It is recommended to use an external volume to preserve history.
  mendRnvLogHistoryDir:

  # Optional: The number of days to save log files. Defaults to 30.
  mendRnvLogHistoryTTLDays:

  # Optional: Specifies a 5-part cron schedule. Defaults to `0 0 * * *` (every midnight).
  # This cron job cleans up log history in the directory defined by `mendRnvLogHistoryDir`.
  # It deletes any log file that exceeds the `mendRnvLogHistoryTTLDays` value.
  mendRnvLogHistoryCleanupCron:

  # Set log level, defaults to 'info'. Allowed values: fatal, error, warn, info, debug, trace
  logLevel: info

  resources:
    requests:
      cpu: 100m
      memory: 300Mi
    limits:
      memory: 500Mi

  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
    readOnlyRootFilesystem: false
    capabilities:
      drop:
        - ALL

  extraVolumes:
    []
    # - name: secrets-store-inline
    #   csi:
    #     driver: secrets-store.csi.k8s.io
    #     readOnly: true
    #     volumeAttributes:
    #       secretProviderClass: "some-secret-store"

  extraVolumeMounts:
    []
    # - name: secrets-store-inline
    #   mountPath: "/mnt/secrets-store"
    #   readOnly: true

## data Persistence Parameters
## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
##
dataPersistence:
  ## Enable persistence using Persistent Volume Claims
  enabled: false
  ## Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  storageClass: longhorn-nvme
  ## @param Persistent Volume access modes
  accessModes:
    - ReadWriteOnce
  ## Persistent Volume size
  size: 6Gi

## Cache in Memory
## ref: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
## cachePersistence.enabled takes precedence, make sure its disabled
##
dataInMemory:
  ## Place the cache/data in memory (tmpfs)
  enabled: true

service:
  type: ClusterIP
  port: 80
  annotations: {}

ingress:
  enabled: true

  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: cloudflare
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  ingressClassName: nginx
  hosts:
    renovate.mcswain.dev:
      paths:
        - path: "/"
          pathType: Prefix
  tls:
    - secretName: renovate-mcswain-dev-tls
      hosts:
        - renovate.mcswain.dev
