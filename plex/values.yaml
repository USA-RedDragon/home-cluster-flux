# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: lscr.io/linuxserver/plex
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.32.6@sha256:d125d36cc26129936e429b4c9d0964a729a9a9d21ee5f9a03ac73dd6b7137981"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

secrets: []
# - name: app-creds
#   data:
#     API_KEY: 'asdfgh123456'
#     SMTP_PASSWORD: '123456asdfgh'
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs: []
# - name: app-config
#   data:
#     TEST_ENV: alive
# - name: app-otherenv
#   data:
#     SPECIAL_KEY: here
# - name: app-configfile
#   data:
#     test.ini: |
#       [test]
#       value=1

envFrom: []
# - secretRef:
#     name: app-creds
# - configMapRef:
#     name: app-config

env:
- name: NVIDIA_VISIBLE_DEVICES
  value: all
- name: VERSION
  value: docker
# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podAnnotations:
  backup.velero.io/backup-volumes-excludes: tv,movies,anime

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
  - name: http
    port: 32400

persistentVolumes:
- name: tv
  mountPath: /TV
  size: 1Ti
  persistentVolumeClaim:
    name: media-tv
    storageClass: media-tv
- name: movies
  mountPath: /Movies
  size: 1Ti
  persistentVolumeClaim:
    name: media-movies
    storageClass: media-movies
- name: anime
  mountPath: /Anime
  size: 1Ti
  persistentVolumeClaim:
    name: media-anime
    storageClass: media-anime
- name: config
  mountPath: /config
  subPath: config
  size: 50Gi
  persistentVolumeClaim:
    name: config
    storageClass: mayastor-nvme
# - name: config
#   mountPath: /config
#   configMap:
#     name: app-configfile
#     items:
#     - key: test.ini
#       path: config.ini
# - name: keys
#   mountPath: /keys
#   readOnly: true
#   secret:
#     secretName: app-keyfile

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: cloudflare
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # 5-minute timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
    #   grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
  ingressClassName: nginx
  hosts:
  - host: plex.mcswain.dev
    paths:
    - port: 32400
      path: /
      pathType: Prefix
  tls:
  - secretName: plex-mcswain-dev-tls
    hosts:
      - plex.mcswain.dev

probes: {}
  # liveness:
  #   httpGet:
  #     path: /
  #     port: 8008
  # readiness:
  #   httpGet:
  #     path: /
  #     port: 8008

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: 4
    memory: 8Gi
  limits:
    nvidia.com/gpu: 1

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
