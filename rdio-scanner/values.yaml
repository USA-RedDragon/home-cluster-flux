# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: chuot/rdio-scanner
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest@sha256:7a34dda5949ff44a1b7c0f5a1b4bb445f606000d1309d29272bf28d5f566afb3"

args: []

imagePullSecrets:
- name: registry-docker-hub
nameOverride: ""
fullnameOverride: ""

secrets: []
# - name: app-creds
#   data:
#     API_KEY: 'asdfgh123456'
#     SMTP_PASSWORD: '123456asdfgh'
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs: []
# - name: app-config
#   data:
#     TEST_ENV: alive
# - name: app-otherenv
#   data:
#     SPECIAL_KEY: here
# - name: app-configfile
#   data:
#     test.ini: |
#       [test]
#       value=1

envFrom: []
# - secretRef:
#     name: app-creds
# - configMapRef:
#     name: app-config

env:
- name: TZ
  value: America/Chicago

# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podAnnotations:
  backup.velero.io/backup-volumes-excludes: sdr-recordings

podSecurityContext:
  fsGroup: 1000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

service:
  type: ClusterIP
  ports:
  - name: http
    port: 3000

persistentVolumes:
- name: sdr-recordings
  mountPath: /mnt/sdr-recordings
  nfs:
    path: /mnt/smr-scratch-noenc/sdr-recordings
    server: 192.168.1.135
- name: data
  mountPath: /app/data
  subPath: data
  size: 20Gi
  persistentVolumeClaim:
    name: data
    storageClass: mayastor-nvme
# - name: config
#   mountPath: /config
#   configMap:
#     name: app-configfile
#     items:
#     - key: test.ini
#       path: config.ini
# - name: keys
#   mountPath: /keys
#   readOnly: true
#   secret:
#     secretName: app-keyfile

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: cloudflare
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # 5-minute timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
  ingressClassName: nginx
  hosts:
  - host: scanner.mcswain.dev
    paths:
    - port: 3000
      path: /
      pathType: Prefix
  tls:
  - secretName: scanner-mcswain-dev-tls
    hosts:
      - scanner.mcswain.dev

probes:
  liveness:
    httpGet:
      path: /
      port: 3000
  readiness:
    httpGet:
      path: /
      port: 3000

resources:
  limits:
    cpu: 100m
    memory: 512Mi
  requests:
    cpu: 10m
    memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
