# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: jacob.pub/ghcr.io/usa-reddragon/mesh-base
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main@sha256:3c2206d5ad0b4dcc6229e017cfb475ec68a3dbdc8e26904302f59bd61067352c"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podLabels:
  policy.mcswain.dev/egress-coredns: "true"

command:
- /bin/sh
- -c
- |
  ip addr add 10.54.25.12/32 dev eth0 \
  && sysctl -w net.ipv4.ip_forward=1 \
  && rsyslogd -n & \
  cat /etc/resolv.conf > /tmp/resolv.conf.auto \
  && echo -e "search local.mesh\nnameserver 127.0.0.1" > /etc/resolv.conf \
  && echo -e "#!/bin/sh\nexec vtund -n -f /etc/vtundsrv.conf KI5VMF-OKWIN-P25-SCANNER-172-31-180-80 oklahoma.aredn.mcswain.cloud" > /etc/s6/vtund/run \
  && exec s6-svscan /etc/s6

secrets: []
# - name: app-creds
#   data:
#     API_KEY: 'asdfgh123456'
#     SMTP_PASSWORD: '123456asdfgh'
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs:
- name: nginx-config
  data:
    nginx-config: |-
      events {
        worker_connections 1024;
      }
      http {
        upstream scanner {
          server rdio-scanner-app.rdio-scanner.svc.cluster.local:3000;
        }
        include mime.types;
        server {
          listen 80;
          server_name _;
          access_log /dev/stdout;
          error_log /dev/stderr;

          client_max_body_size 16M;

          location / {
            proxy_pass http://scanner;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
          }
        }
        server {
          listen 8080;
          server_name _;
          access_log /dev/stdout;
          error_log /dev/stderr;

          location / {
            return 301 http://$host$request_uri;
          }
        }
      }
- name: olsrd-config
  data:
    olsrd.conf: |
      DebugLevel 0
      AllowNoInt yes
      IpVersion 4
      MainIp 10.54.25.12
      LinkQualityAlgorithm "etx_ffeth"

      LoadPlugin "olsrd_arprefresh.so.0.1"
      {
      }

      LoadPlugin "olsrd_txtinfo.so.1.1"
      {
          PlParam "accept" "0.0.0.0"
      }

      LoadPlugin "olsrd_jsoninfo.so.1.1"
      {
          PlParam "accept" "0.0.0.0"
      }

      LoadPlugin "olsrd_dot_draw.so.0.3"
      {
          PlParam "accept" "0.0.0.0"
          PlParam "port" "2004"
      }

      LoadPlugin "olsrd_watchdog.so.0.1"
      {
          PlParam "file" "/tmp/olsrd.watchdog"
          PlParam "interval" "5"
      }

      LoadPlugin "olsrd_nameservice.so.0.4"
      {
          PlParam "sighup-pid-file" "/var/run/dnsmasq/dnsmasq.pid"
          PlParam "interval" "30"
          PlParam "timeout" "300"
          PlParam "name" "KI5VMF-OKWIN-P25-SCANNER"
          PlParam "service" "http://KI5VMF-OKWIN-P25-SCANNER.local.mesh:80/|tcp|OKWIN P25 Scanner"
      }

      Interface "tun60"
      {
          Ip4Broadcast 255.255.255.255
          Mode "ether"
      }

      Interface "eth0"
      {
          Mode "ether"
      }

envFrom: []
# - secretRef:
#     name: app-creds
# - configMapRef:
#     name: app-config

env: {}
# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podSecurityContext:
  privileged: true
  capabilities:
    add:
    - NET_ADMIN

service:
  type: ClusterIP

persistentVolumes:
- name: olsrd-config
  mountPath: /etc/olsrd
  configMap:
    name: olsrd-config
- name: server-vtun-config
  mountPath: /etc/vtundsrv.conf
  subPath: vtundsrv.conf
  secret:
    secretName: server-vtun-config
- name: nginx-config
  mountPath: /etc/nginx/nginx.conf
  configMap:
    name: nginx-config
#     items:
#     - key: test.ini
#       path: config.ini
# - name: keys
#   mountPath: /keys
#   readOnly: true
#   secret:
#     secretName: app-keyfile

extraContainers:
- name: nginx
  image: jacob.pub/docker.io/nginx:mainline-alpine@sha256:b3c656d55d7ad751196f21b7fd2e8d4da9cb430e32f646adcf92441b72f82b14
  imagePullPolicy: IfNotPresent
  ports:
    - containerPort: 80
      protocol: TCP
      name: http
  volumeMounts:
    - name: nginx-config
      mountPath: /etc/nginx/nginx.conf
      subPath: nginx-config
      readOnly: true

ingress:
  enabled: false

probes: {}
  # liveness:
  #   httpGet:
  #     path: /health
  #     port: 81
  # readiness:
  #   httpGet:
  #     path: /health
  #     port: 81

resources:
  limits:
    memory: 12Mi
  requests:
    cpu: 10m
    memory: 6Mi

initContainers: []

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
