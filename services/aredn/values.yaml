# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/usa-reddragon/mesh-base
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main@sha256:facc1cce9ccaabf2cd97859b436bad60094bfcae5be9800f3881281351452caa"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

command:
- /bin/sh
- -c
- |
  NODE_IP=10.54.25.4 && \
  NODE_NAME=KI5VMF-KUBERNETES && \
  sysctl -w net.ipv4.ip_forward=1 && \
  sysctl -w net.ipv6.conf.all.forwarding=1 && \
  ip link add dev br-wan type bridge && \
  ip link set dev eth0 master br-wan && \
  ip link set br-wan up && \
  GW=$(ip route list 0/0 | awk '{ print $3 }') && \
  IP6_GW=$(ip -6 route list ::/0 | awk '{ print $3 }') && \
  IPV4_ADDRS=$(ip address show eth0 | grep 'inet ' | awk '{ print $2 }') && \
  for IPV4_ADDR in $IPV4_ADDRS; do \
      ip address del dev eth0 $IPV4_ADDR && \
      ip address add dev br-wan $IPV4_ADDR ; \
  done && \
  IPV6_ADDRS=$(ip address show eth0 | grep 'inet6 ' | awk '{ print $2 }') && \
  for IPV6_ADDR in $IPV6_ADDRS; do \
      if [[ $IPV6_ADDR == fe80:* ]]; then \
          continue ; \
      fi && \
      ip address del dev eth0 $IPV6_ADDR && \
      ip address add dev br-wan $IPV6_ADDR ; \
  done && \
  ip r add $GW dev br-wan scope link table 28  && \
  ip route add default via $GW dev br-wan table 28 && \
  ip -6 route del default via $IP6_GW dev eth0 && \
  ip -6 route add $IP6_GW dev br-wan metric 1024 pref medium table 28 && \
  ip -6 route add default via $IP6_GW dev br-wan table 28 && \
  ip link add dev br-dtdlink type bridge && \
  ip link set br-dtdlink up && \
  ip addr add ${NODE_IP}/8 dev br-dtdlink && \
  ip rule add pref 20010 iif br-dtdlink lookup 29 && \
  ip rule add pref 20020 iif br-dtdlink lookup 20 && \
  ip rule add pref 20030 iif br-dtdlink lookup 30 && \
  ip rule add pref 20040 iif br-dtdlink lookup 21 && \
  ip rule add pref 20050 iif br-dtdlink lookup 22 && \
  ip rule add pref 20060 iif br-dtdlink lookup 28 && \
  ip rule add pref 20070 iif br-dtdlink lookup 31 && \
  ip rule add pref 20099 iif br-dtdlink unreachable && \
  ip rule add pref 30210 lookup 29 && \
  ip rule add pref 30220 lookup 20 && \
  ip rule add pref 30230 lookup 30 && \
  ip rule add pref 30240 lookup 21 && \
  ip rule add pref 30260 lookup main && \
  ip rule add pref 30280 lookup 28 && \
  ip rule add pref 30290 lookup 31 && \
  ip rule add pref 20030 iif tunnel lookup 30 && \
  ip rule add pref 20040 iif tunnel lookup 21 && \
  ip rule add pref 20050 iif tunnel lookup 22 && \
  ip rule add pref 20060 iif tunnel lookup 28 && \
  ip rule add pref 20070 iif tunnel lookup 31 && \
  ip rule add pref 20099 iif tunnel unreachable && \
  ip -6 addr add fe80::ac1f:bf09/64 dev tunnel && \
  mkdir -p /etc/meshlink && \
  echo "${NODE_IP} ${NODE_NAME}" >> /etc/meshlink/hosts && \
  echo "${NODE_IP} dtdlink.${NODE_NAME}.local.mesh" >> /etc/meshlink/hosts && \
  rsyslogd -n & \
  cat /etc/resolv.conf > /tmp/resolv.conf.auto && \
  echo -e "search local.mesh\nnameserver 127.0.0.1" > /etc/resolv.conf && \
  rm -rf /etc/s6/vtund && \
  cp /etc/babel/babel.conf /tmp/babel-generated.conf && \
  sleep 2 && \
  exec s6-svscan /etc/s6

secrets: []
# - name: app-creds
#   data:
#     API_KEY: 'asdfgh123456'
#     SMTP_PASSWORD: '123456asdfgh'
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs:
- name: server-babel-config
  data:
    babel.conf: |
      router-id 02:44:c0:a6:cb:05
      interface br-dtdlink type wired
      interface br-dtdlink rxcost 96
      interface br-dtdlink split-horizon true
      interface tunnel type tunnel
      interface tunnel rxcost 206
      interface tunnel hello-interval 10
      interface tunnel rtt-min 10
      interface tunnel rtt-max 400
      interface tunnel max-rtt-penalty 400
      redistribute anyproto if tunnel deny
      redistribute anyproto ip 10.0.0.0/8 ge 24 allow
      redistribute anyproto ip 44.0.0.0/8 ge 24 allow
      redistribute anyproto ip 172.31.0.0/16 eq 32 deny
      redistribute deny
      install ip 10.0.0.0/8 eq 8 allow table 21
      install ip 44.0.0.0/8 le 23 allow table 21
      install ip 0.0.0.0/0 eq 0 allow table 22
      install ip 10.0.0.0/8 ge 24 allow table 20
      install ip 44.0.0.0/8 ge 24 allow table 20
      install ip 0.0.0.0/0 ge 0 deny
- name: server-olsr-config
  data:
    olsrd.conf: |
      DebugLevel 0
      AllowNoInt yes
      RtTable '30'
      RtTableDefault '31'
      IpVersion 4
      MainIp 10.54.25.4
      LinkQualityAlgorithm "etx_ffeth"

      LoadPlugin "olsrd_arprefresh.so.0.1"
      {
      }
      LoadPlugin "olsrd_txtinfo.so.1.1"
      {
        PlParam "accept" "0.0.0.0"
      }
      LoadPlugin "olsrd_jsoninfo.so.1.1"
      {
        PlParam "accept" "0.0.0.0"
      }
      LoadPlugin "olsrd_dot_draw.so.0.3"
      {
        PlParam "accept" "0.0.0.0"
        PlParam "port" "2004"
      }
      LoadPlugin "olsrd_watchdog.so.0.1"
      {
        PlParam "file" "/tmp/olsrd.watchdog"
        PlParam "interval" "5"
      }
      LoadPlugin "olsrd_nameservice.so.0.4"
      {
        PlParam "sighup-pid-file" "/var/run/dnsmasq/dnsmasq.pid"
        PlParam "interval" "30"
        PlParam "timeout" "300"
        PlParam "name" "KI5VMF-KUBERNETES"
      }
      Interface "tunnel"
      {
        Ip4Broadcast 255.255.255.255
        Mode "ether"
      }

envFrom: []
# - secretRef:
#     name: app-creds
# - configMapRef:
#     name: app-config

env: {}
# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podSecurityContext:
  privileged: true
  capabilities:
    add:
    - NET_ADMIN

securityContext:
  sysctls:
  - name: net.ipv4.conf.all.src_valid_mark
    value: "1"

service:
  type: ClusterIP
  ports:
  - name: wg
    protocol: UDP
    port: 51820

persistentVolumes:
- name: server-olsr-config
  mountPath: /etc/olsrd
  configMap:
    name: server-olsr-config
- name: server-babel-config
  mountPath: /etc/babel
  configMap:
    name: server-babel-config
- name: server-wireguard-config
  mountPath: /etc/wireguard
  secret:
    secretName: server-wireguard-config
#     items:
#     - key: test.ini
#       path: config.ini
# - name: keys
#   mountPath: /keys
#   readOnly: true
#   secret:
#     secretName: app-keyfile

ingress:
  enabled: false

probes: {}
  # liveness:
  #   httpGet:
  #     path: /health
  #     port: 81
  # readiness:
  #   httpGet:
  #     path: /health
  #     port: 81

resources:
  limits:
    memory: 12Mi
  requests:
    cpu: 10m
    memory: 6Mi

initContainers:
- image: ghcr.io/usa-reddragon/wireguard:main@sha256:94d9a2f55a41983bd725c48a770caf11f93d577aa687b629b0b728fe0c54d0e3
  name: wireguard-init
  securityContext:
    privileged: true
    capabilities:
      add:
      - NET_ADMIN
  command:
  - /bin/sh
  - -c
  - |
    set -x && \
    sleep 10 && \
    ip l del lan 2>/dev/null || true && \
    wg-quick up /etc/wireguard/lan.conf && \
    ip l del tunnel 2>/dev/null || true && \
    wg-quick up /etc/wireguard/tunnel.conf && \
    ip6tables -P INPUT DROP && \
    ip6tables -P FORWARD DROP && \
    iptables -P INPUT DROP && \
    iptables -P FORWARD DROP && \
    iptables -A INPUT -i lo -j ACCEPT && \
    iptables -A INPUT -i tunnel -j ACCEPT && \
    iptables -A INPUT -i eth0 -p udp --dport 51820 -j ACCEPT && \
    iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT && \
    ip6tables -A INPUT -i lo -j ACCEPT && \
    ip6tables -A INPUT -i tunnel -j ACCEPT && \
    ip6tables -A INPUT -i eth0 -p udp --dport 51820 -j ACCEPT && \
    ip6tables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT && \
    iptables -A FORWARD -i lan -o eth0 -j DROP && \
    ip6tables -A FORWARD -i lan -o eth0 -j DROP && \
    iptables -A FORWARD -i lan -o tunnel -j ACCEPT && \
    ip6tables -A FORWARD -i lan -o tunnel -j ACCEPT && \
    iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT && \
    ip6tables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT && \
    iptables -t nat -A POSTROUTING -d 10.0.0.0/8 -o tunnel -j SNAT --to-source 10.54.25.4 && \
    iptables -t nat -A POSTROUTING ! -d 10.0.0.0/8 -o tunnel -j MASQUERADE
  volumeMounts:
  - mountPath: /etc/wireguard
    name: server-wireguard-config
  imagePullPolicy: IfNotPresent

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
