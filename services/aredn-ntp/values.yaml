# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/usa-reddragon/aredn-base
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main@sha256:494ccd17194a605a49124de3cc288a400ecbb4ce4bda9b36f67749fd2403f242"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

command:
- /bin/sh
- -c
- |
  ip addr add 10.54.25.6/32 dev eth0 \
  && sysctl -w net.ipv4.ip_forward=1 \
  && rsyslogd -n & \
  cat /etc/resolv.conf > /tmp/resolv.conf.auto \
  && echo -e "search local.mesh\nnameserver 127.0.0.1" > /etc/resolv.conf \
  && rm -rf /etc/s6/vtund \
  && exec s6-svscan /etc/s6

secrets: []
# - name: app-creds
#   data:
#     API_KEY: 'asdfgh123456'
#     SMTP_PASSWORD: '123456asdfgh'
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs:
- name: olsrd-config
  data:
    olsrd.conf: |
      DebugLevel 0
      AllowNoInt yes
      IpVersion 4
      MainIp 10.54.25.6
      LinkQualityAlgorithm "etx_ffeth"

      LoadPlugin "olsrd_arprefresh.so.0.1"
      {
      }

      LoadPlugin "olsrd_txtinfo.so.1.1"
      {
          PlParam "accept" "0.0.0.0"
      }

      LoadPlugin "olsrd_jsoninfo.so.1.1"
      {
          PlParam "accept" "0.0.0.0"
      }

      LoadPlugin "olsrd_dot_draw.so.0.3"
      {
          PlParam "accept" "0.0.0.0"
          PlParam "port" "2004"
      }

      LoadPlugin "olsrd_watchdog.so.0.1"
      {
          PlParam "file" "/tmp/olsrd.watchdog"
          PlParam "interval" "5"
      }

      LoadPlugin "olsrd_nameservice.so.0.4"
      {
          PlParam "sighup-pid-file" "/var/run/dnsmasq/dnsmasq.pid"
          PlParam "interval" "30"
          PlParam "timeout" "300"
          PlParam "name" "KI5VMF-NTP"
          PlParam "service" "http://KI5VMF-NTP.local.mesh:0/|udp|NTP Server"
      }

      Interface "tun60" "tunnel"
      {
          Ip4Broadcast 255.255.255.255
          Mode "ether"
      }

      Interface "eth0"
      {
          Mode "ether"
      }

envFrom: []
# - secretRef:
#     name: app-creds
# - configMapRef:
#     name: app-config

env: {}
# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podSecurityContext:
  privileged: true
  capabilities:
    add:
    - NET_ADMIN

securityContext:
  sysctls:
  - name: net.ipv4.conf.all.src_valid_mark
    value: "1"

service:
  type: ClusterIP
  ports:
  - name: ntp
    port: 123
    protocol: UDP

persistentVolumes:
- name: olsrd-config
  mountPath: /etc/olsrd
  configMap:
    name: olsrd-config
- name: server-wireguard-config
  mountPath: /etc/wireguard
  subPath: vtundsrv.conf
  secret:
    secretName: server-wireguard-config
#     items:
#     - key: test.ini
#       path: config.ini
# - name: keys
#   mountPath: /keys
#   readOnly: true
#   secret:
#     secretName: app-keyfile

extraContainers:
- name: ntp
  image: cturra/ntp@sha256:d3c6ee33aff355befe003a9025a923c5d033094c29a1d9ee451e409b41c73f86
  imagePullPolicy: IfNotPresent
  ports:
    - containerPort: 123
      protocol: UDP
      name: ntp

ingress:
  enabled: false

probes: {}
  # liveness:
  #   httpGet:
  #     path: /health
  #     port: 81
  # readiness:
  #   httpGet:
  #     path: /health
  #     port: 81

resources:
  limits:
    memory: 12Mi
  requests:
    cpu: 10m
    memory: 6Mi

initContainers:
- image: ghcr.io/usa-reddragon/wireguard:main@sha256:91b7de8c0be994359215d26b9ab5b038b9e65c2565e5e8dfca5795d15bfdd865
  name: wireguard-init
  securityContext:
    privileged: true
    capabilities:
      add:
      - NET_ADMIN
  command:
  - /bin/sh
  - -c
  - |
    set -x && \
    sleep 10 && \
    ip l del tunnel 2>/dev/null || true && \
    wg-quick up /etc/wireguard/tunnel.conf && \
    ip6tables -P INPUT DROP && \
    ip6tables -P OUTPUT DROP && \
    ip6tables -P FORWARD DROP && \
    iptables -P INPUT DROP && \
    iptables -P FORWARD DROP && \
    iptables -A INPUT -i lo -j ACCEPT && \
    iptables -A INPUT -i tunnel -j ACCEPT && \
    iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT && \
    iptables -A FORWARD -i tunnel -o eth0 -j DROP && \
    iptables -A FORWARD -i eth0 -o tunnel -j ACCEPT && \
    iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT && \
    iptables -t nat -A POSTROUTING -d 10.0.0.0/8 -o tunnel -j SNAT --to-source 10.54.25.6 && \
    iptables -t nat -A POSTROUTING ! -d 10.0.0.0/8 -o tunnel -j MASQUERADE
  volumeMounts:
  - mountPath: /etc/wireguard
    name: server-wireguard-config
  imagePullPolicy: IfNotPresent

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
