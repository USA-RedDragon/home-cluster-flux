# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.4.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json

controllers:
  zot:
    strategy: RollingUpdate
    replicas: 3
    pod:
      priorityClassName: system-cluster-critical
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
    containers:
      zot:
        args:
        - serve
        - /etc/zot/config.yaml
        image:
          repository: ghcr.io/project-zot/zot
          tag: v2.1.3-rc2
          pullPolicy: IfNotPresent
        securityContext:
          readOnlyRootFilesystem: true
        probes:
          liveness:
            enabled: true
          readiness:
            enabled: true
          startup:
            enabled: true
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: minio
                key: accesskey
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio
                key: secretkey

service:
  zot:
    controller: zot
    ports:
      http:
        port: 5000

configMaps:
  config:
    data:
      config.yaml: |
        http:
          address: 0.0.0.0
          port: 5000
          externalUrl: https://jacob.pub
          compat: [docker2s2]
          accessControl:
            adminPolicy:
              groups: [trusted]
              actions: [create, read, update, delete, detectManifestCollision]
            repositories:
              "**":
                defaultPolicy: [read]
              "pub/**":
                defaultPolicy: [read]
                anonymousPolicy: [read]
          auth:
            failDelay: 3
            sessionKeysFile: /etc/zot/sessionkeys.json
            openid:
              providers:
                oidc:
                  issuer: https://authentik.mcswain.dev/application/o/zot/
                  scopes: [openid, profile, email, groups]
                  clientid: ${zot_oidc_clientid}
                  clientsecret: ${zot_oidc_clientsecret}
        log:
          level: info
        extensions:
          ui:
            enable: true
          search:
            enable: true
          metrics:
            enable: true
            prometheus:
              path: /metrics
        storage:
          rootDirectory: /tmp/zot
          remoteCache: true
          cacheDriver:
            name: redis
            url: redis://valkey:6379
            password: ${valkey_password}
          dedupe: true
          storageDriver:
            name: s3
            regionendpoint: minio-app.minio.svc.cluster.local:9000
            forcepathstyle: true
            region: us-east-1
            bucket: zot
            secure: false

persistence:
  config:
    enabled: true
    type: configMap
    name: zot
    globalMounts:
      - path: /etc/zot/config.yaml
        subPath: config.yaml
  sessionkeys:
    enabled: true
    type: secret
    name: zot-sessionkeys
    globalMounts:
      - path: /etc/zot/sessionkeys.json
        subPath: sessionkeys
  tmp-zot:
    enabled: true
    type: emptyDir
    globalMounts:
      - path: /tmp/zot

ingress:
  nginx:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: cloudflare
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
      nginx.ingress.kubernetes.io/server-snippet: |
        location = /v2/ {
            deny all;
            return 401;
        }
        location /metrics {
            deny all;
            return 404;
        }
    hosts:
      - host: jacob.pub
        paths:
          - path: /
            service:
              identifier: zot
              port: http
    tls:
      - hosts:
          - jacob.pub
        secretName: jacob-pub
