# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/usa-reddragon/aredn-base
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main@sha256:463ea30ab76a7fb6ff8921266ba687de8784754821bef7c9c03a3564eed541e3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

command:
- /bin/sh
- -c
- |
  ip addr add 10.54.25.4/32 dev eth0 \
  && sysctl -w net.ipv4.ip_forward=1 \
  && rsyslogd -n & \
  cat /etc/resolv.conf > /tmp/resolv.conf.auto \
  && echo -e "search local.mesh\nnameserver 127.0.0.1" > /etc/resolv.conf \
  && rm -rf /etc/s6/vtund \
  && exec s6-svscan /etc/s6

secrets: []
# - name: app-creds
#   data:
#     API_KEY: 'asdfgh123456'
#     SMTP_PASSWORD: '123456asdfgh'
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs: []
# - name: app-config
#   data:
#     TEST_ENV: alive
# - name: app-otherenv
#   data:
#     SPECIAL_KEY: here
# - name: app-configfile
#   data:
#     test.ini: |
#       [test]
#       value=1

envFrom: []
# - secretRef:
#     name: app-creds
# - configMapRef:
#     name: app-config

env: {}
# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podAnnotations:
  backup.velero.io/backup-volumes-excludes: server-olsr-config,server-wireguard-config

podSecurityContext:
  privileged: true
  capabilities:
    add:
    - NET_ADMIN

securityContext:
  sysctls:
  - name: net.ipv4.conf.all.src_valid_mark
    value: "1"

service:
  type: ClusterIP
  ports:
  - name: wg
    protocol: UDP
    port: 51820

persistentVolumes:
- name: server-olsr-config
  mountPath: /etc/olsrd
  secret:
    secretName: server-olsr-config
- name: server-wireguard-config
  mountPath: /etc/wireguard
  secret:
    secretName: server-wireguard-config
#     items:
#     - key: test.ini
#       path: config.ini
# - name: keys
#   mountPath: /keys
#   readOnly: true
#   secret:
#     secretName: app-keyfile

ingress:
  enabled: false

probes: {}
  # liveness:
  #   httpGet:
  #     path: /health
  #     port: 81
  # readiness:
  #   httpGet:
  #     path: /health
  #     port: 81

resources:
  limits:
    cpu: 20m
    memory: 12Mi
  requests:
    cpu: 10m
    memory: 6Mi

initContainers:
- image: ghcr.io/usa-reddragon/wireguard:main@sha256:23fe2cfb41ba9b8f0f8c9595ad2a5322117ecf038e31267bb941bc37270be9d7
  name: wireguard-init
  securityContext:
    privileged: true
    capabilities:
      add:
      - NET_ADMIN
  command:
  - /bin/sh
  - -c
  - |
    set -x && \
    sleep 10 && \
    ip l del lan 2>/dev/null || true && \
    wg-quick up /etc/wireguard/lan.conf && \
    ip l del tunnel 2>/dev/null || true && \
    wg-quick up /etc/wireguard/tunnel.conf && \
    ip6tables -P INPUT DROP && \
    ip6tables -P OUTPUT DROP && \
    ip6tables -P FORWARD DROP && \
    iptables -P INPUT DROP && \
    iptables -P FORWARD DROP && \
    iptables -A INPUT -i lo -j ACCEPT && \
    iptables -A INPUT -i tunnel -j ACCEPT && \
    iptables -A INPUT -i eth0 -p udp --dport 51820 -j ACCEPT && \
    iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT && \
    iptables -A FORWARD -i lan -o eth0 -j DROP && \
    iptables -A FORWARD -i lan -o tunnel -j ACCEPT && \
    iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT && \
    iptables -t nat -A POSTROUTING -d 10.0.0.0/8 -o tunnel -j SNAT --to-source 10.54.25.4 && \
    iptables -t nat -A POSTROUTING ! -d 10.0.0.0/8 -o tunnel -j MASQUERADE
  volumeMounts:
  - mountPath: /etc/wireguard
    name: server-wireguard-config
  imagePullPolicy: IfNotPresent

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
