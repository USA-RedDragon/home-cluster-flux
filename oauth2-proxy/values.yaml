# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/oauth2-proxy/oauth2-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v7.5.0@sha256:528a5b25f0eddb010aa9029ee46d91a8b1de2998288e15afb2e201d74b70d15f"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

args:
- --provider=oidc
- --oidc-issuer-url=https://keycloak.mcswain.dev/realms/network
- --cookie-secure=true
- --cookie-domain=.mcswain.dev
- --whitelist-domain=.mcswain.dev
- --email-domain=*
- --upstream=file:///dev/null
- --http-address=0.0.0.0:4180
- --redis-connection-url=redis://redis-app.redis.svc.cluster.local:6379
- --reverse-proxy
- --set-xauthrequest
- --skip-provider-button
- --code-challenge-method=S256
- --cookie-expire=24h0m0s

secrets: []
# - name: app-secret-key
#   data:
#     SECRET_KEY: ashdfsfa
# - name: app-keyfile
#   data:
#     keyfile.txt: |
#       using
#       multiline
#       strings

configs: []
# - name: app-config
#   data:
#     TEST_ENV: alive
# - name: app-otherenv
#   data:
#     SPECIAL_KEY: here
# - name: app-configfile
#   data:
#     test.ini: |
#       [test]
#       value=1

envFrom: []
# - secretRef:
#     name: app-creds
# - configMapRef:
#     name: app-config

env:
- name: OAUTH2_PROXY_CLIENT_ID
  value: "auth"
- name: OAUTH2_PROXY_CLIENT_SECRET
  valueFrom:
    secretKeyRef:
      name: oauth2-proxy
      key: proxy-client-secret
- name: OAUTH2_PROXY_COOKIE_SECRET
  valueFrom:
    secretKeyRef:
      name: oauth2-proxy
      key: proxy-cookie-secret
# - name: SPECIAL_KEY
#   valueFrom:
#     configMapKeyRef:
#       name: app-otherenv
#       key: SPECIAL_KEY

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
  - name: oauth2-proxy
    port: 4180

persistentVolumes: []
# - name: data
#   mountPath: /var/lib/postgresql/data
#   subPath: pg
#   size: 10Gi
#   persistentVolumeClaim:
#     name: data
#     storageClass: mayastor-nvme
# - name: config
#   mountPath: /config
#   configMap:
#     name: app-configfile
#     items:
#     - key: test.ini
#       path: config.ini
# - name: keys
#   mountPath: /keys
#   readOnly: true
#   secret:
#     secretName: app-keyfile

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: cloudflare
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
    #   grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
  hosts:
  - host: auth.mcswain.dev
    paths:
    - port: 4180
      path: /
      pathType: Prefix
  tls:
  - secretName: auth-mcswain-dev-tls
    hosts:
      - auth.mcswain.dev

probes:
  liveness:
    httpGet:
      path: /ping
      port: 4180
  readiness:
    httpGet:
      path: /ping
      port: 4180

resources:
  limits:
    memory: 50Mi
  requests:
    memory: 30Mi

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}
  # postStart:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - cp /tmp/file /var/app/file
