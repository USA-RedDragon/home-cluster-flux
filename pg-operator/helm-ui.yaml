---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: pg-operator-ui
  namespace: pg-operator
spec:
  interval: 1m0s
  releaseName: pg-operator-ui
  chart:
    spec:
      chart: postgres-operator-ui
      sourceRef:
        kind: HelmRepository
        name: postgres-operator-charts
      version: '>=1.10.1 <2.0.0'
      interval: 1m0s
  values:
    imagePullSecrets:
      - name: registry-docker-hub
    envs:
      operatorApiUrl: "http://pg-operator-postgres-operator.pg-operator.svc.cluster.local:8080"
      targetNamespace: "pg-operator"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/tls-acme: "true"
        cert-manager.io/cluster-issuer: cloudflare
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
        nginx.ingress.kubernetes.io/auth-signin: https://authentik.mcswain.dev/outpost.goauthentik.io/start?rd=$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
        nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
      ingressClassName: nginx
      hosts:
        - host: postgres.mcswain.dev
          paths:
            - port: 80
              path: /
              pathType: Prefix
      tls:
        - secretName: postgres-mcswain-dev-tls
          hosts:
            - postgres.mcswain.dev
