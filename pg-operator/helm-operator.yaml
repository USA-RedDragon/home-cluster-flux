---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: pg-operator
  namespace: pg-operator
spec:
  interval: 1m0s
  releaseName: pg-operator
  chart:
    spec:
      chart: postgres-operator
      sourceRef:
        kind: HelmRepository
        name: postgres-operator-charts
      version: '>=1.10.1 <2.0.0'
      interval: 1m0s
  values:
    imagePullSecrets:
      - name: registry-docker-hub
    configGeneral:
      min_instances: 2
      max_instances: 3
      enable_crd_registration: false
    # configUsers:
    #   # enable_password_rotation: true
    configMajorVersionUpgrade:
      major_version_upgrade_mode: manual
    configKubernetes:
      enable_cross_namespace_secret: true
      enable_pod_antiaffinity: true
      enable_readiness_probe: true
      # infrastructure_roles_secret_name: postgresql-infrastructure-roles
      storage_resize_mode: off
    configLoadBalancer:
      db_hosted_zone: db.mcswain.dev
      # toggles service type load balancer pointing to the master pod of the cluster
      enable_master_load_balancer: true
      # toggles service type load balancer pointing to the master pooler pod of the cluster
      enable_master_pooler_load_balancer: true
      # toggles service type load balancer pointing to the replica pod of the cluster
      enable_replica_load_balancer: true
      # toggles service type load balancer pointing to the replica pooler pod of the cluster
      enable_replica_pooler_load_balancer: true
      # define external traffic policy for the load balancer
      external_traffic_policy: "Local"
    configLogicalBackup:
      logical_backup_provider: "s3"
      # S3 Access Key ID
      # logical_backup_s3_access_key_id: ""
      # S3 bucket to store backup results
      # logical_backup_s3_bucket: "my-bucket-url"
      # S3 region of bucket
      # logical_backup_s3_region: ""
      # S3 endpoint url when not using AWS
      # logical_backup_s3_endpoint: ""
      # S3 Secret Access Key
      # logical_backup_s3_secret_access_key: ""
      # S3 server side encryption
      # logical_backup_s3_sse: "AES256"
      # S3 retention time for stored backups for example "2 week" or "7 days"
      # logical_backup_s3_retention_time: ""
      # backup schedule in the cron format
      # logical_backup_schedule: "30 00 * * *"
    # configAwsOrGcp:
      # wal_s3_bucket: ""
      # log_s3_bucket: ""
      # Additional Secret (aws or gcp credentials) to mount in the pod
      # additional_secret_mount: "some-secret-name"
    configTeamsApi:
      enable_postgres_team_crd: false
      enable_teams_api: false
    configPatroni:
      enable_patroni_failsafe_mode: true
